import asyncio
from playwright.async_api import async_playwright
from bs4 import BeautifulSoup
import re


async def parse_restaurant_phone_numbers(md_file_path):
    restaurant_links = read_restaurant_links_from_md(md_file_path)  # –ß–∏—Ç–∞–µ–º —Å—Å—ã–ª–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞

    async with async_playwright() as p:
        browser = await p.chromium.launch(
            executable_path=r"C:\Program Files\Google\Chrome\Application\chrome.exe",  # –ü—É—Ç—å –∫ —Ç–≤–æ–µ–º—É Chrome
            headless=True  # –£–±–∏—Ä–∞–µ–º headless=False, —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä —Ä–∞–±–æ—Ç–∞–ª –±–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        )

        for link in restaurant_links:
            try:
                print(f"üîç –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {link}")

                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                context = await browser.new_context(
                    user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
                    # –£–∫–∞–∑—ã–≤–∞–µ–º User-Agent
                    extra_http_headers={
                        "Accept-Language": "en-US,en;q=0.9"
                    }
                )
                page = await context.new_page()

                if await load_page_with_retry(page, link):  # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    await page.wait_for_selector('a[href^="tel:"]',
                                                 timeout=60000)  # –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∞ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º

                    # –ü–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    html = await page.content()
                    soup = BeautifulSoup(html, "html.parser")

                    # –ò—â–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <a href="tel:+375447488267">
                    phone_tag = soup.find("a", href=re.compile(r"tel:\+?\d+"))

                    if phone_tag:
                        phone_number = phone_tag.get_text(strip=True)
                        print(f"üìû –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä: {phone_number}")
                    else:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {link}")

                    await page.close()  # –ó–∞–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É {link} –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫.")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {link}: {e}")

        await browser.close()


async def load_page_with_retry(page, url, retries=3):
    """–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ–≤—Ç–æ—Ä–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ"""
    for attempt in range(retries):
        try:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –¥–ª—è {url}")
            await page.goto(url, timeout=90000)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ 90 —Å–µ–∫—É–Ω–¥
            await page.wait_for_selector('a[href^="tel:"]', timeout=60000)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–æ 60 —Å–µ–∫—É–Ω–¥
            return True
        except Exception as e:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å –¥–ª—è {url}: {e}")
            await asyncio.sleep(5)  # –ü–æ–¥–æ–∂–¥–∞—Ç—å –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
    return False


def read_restaurant_links_from_md(md_file_path):
    """ –ß–∏—Ç–∞–µ–º —Å—Å—ã–ª–∫–∏ –∏–∑ markdown-—Ñ–∞–π–ª–∞ """
    links = []
    with open(md_file_path, "r", encoding="utf-8") as file:
        for line in file:
            match = re.search(r"\[(?:–°—Å—ã–ª–∫–∞|.*?)\]\((https://restaurantguru\.ru/.*?)\)", line)
            if match:
                links.append(match.group(1))
    return links


md_file_path = "restaurants_vitebsk_clean.md"
asyncio.run(parse_restaurant_phone_numbers(md_file_path))
